codequotecode {
  Program   = Statement+
  
  Statement =
            | id "is" Relop (newline)*           --vardec
            | Var is Relop (newline)*                   --assign
            | output Relop (newline)*                    --print
            
            | loop until Conditional 
            newline indent  (Statement)* 
            "end"    --while
            
            | loop id from number to number by number 
            newline indent  (Statement)* "end"          --for
            
            | function id "in:" Var ("," Var)* 
            newline indent (Statement )* 
            "out:" (Relop)  --funcdef 
            
            | if Conditional 
            newline indent (Statement)* 
            dedent ( else if Conditional newline indent (Statement)* dedent)*
            ( else newline indent (Statement)*)*   --if
            
            
  Conditional= "(" Conditional ")" ( "and" | "or" | "<=" | ">=" | "<" | ">" | "==" | "!=") Exp   --expansion
            | Exp ("and" | "or" | "<=" | ">=" | "<" | ">" | "==" | "!=") Exp                                   --boolean
            
  Relop = Relop ("and" | "or" | "<=" | ">=" | "<" | ">" | "==" | "!=")  Exp        --binary
            | Exp                                                 --unary
            
  Exp       = Exp ("+" | "-") Term            --binary
            | Term
            
  Term      = Term ("*"| "/"|"^"|"%") Factor          --binary
            | Factor
            
  Factor    = Var 
            | number
            | "\"" (~"\\" ~"\"" ~"\n" any | escape)* "\""                --string
            | "(" Exp ")"                     --parens
            
  Var       = id
  
  number       = digit+ ("." digit+)?
  loop="loop" ~alnum
  until="until" ~alnum
  from="from" ~alnum
  to="to" ~alnum
  by="by" ~alnum
  function="function" ~alnum
  if="if" ~alnum 
  else="else" ~alnum
  is       = "is" ~alnum
  output     = "output" ~alnum
  keyword   = is | output | loop | until | from | to | by | function | is
  id        = ~keyword letter alnum*
  
  newline= "\n"+
    indent      = "\t"
  dedent      = "â‡¦"
  space       := " "  | comment
  comment     = "!!!" (~"\n" any)* "\n"                            -- singleLine
              | "!?" (~"?!" any)* "?!"                             -- multiLine
  escape      = "\\" ("\\" | "\"")                           -- simple
}
